# Generated by Django 5.2.2 on 2025-06-07 09:54

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.PositiveBigIntegerField(primary_key=True, serialize=False, verbose_name='Telegram ID')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия')),
                ('username', models.CharField(blank=True, max_length=32, null=True, verbose_name='Ник')),
                ('is_premium', models.BooleanField(default=False, verbose_name='Есть премиум')),
                ('language', models.CharField(choices=[('en', 'English'), ('ru', 'Русский')], default='en', max_length=10, verbose_name='Язык')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('code', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True, verbose_name='Код')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Сайт',
                'verbose_name_plural': 'Сайты',
                'ordering': ['url'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MonitoredSite',
            fields=[
                ('task_id', models.PositiveBigIntegerField(primary_key=True, serialize=False, verbose_name='ID Задачи в PingAdmin')),
                ('period', models.IntegerField(verbose_name='Периодичность проверки')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='monitored_sites', to='core.country', verbose_name='Страна')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='monitored_sites', to='core.site', verbose_name='Сайт')),
            ],
            options={
                'verbose_name': 'Отслеживаемый сайт',
                'verbose_name_plural': 'Отслеживаемые сайты',
                'unique_together': {('site', 'country')},
            },
        ),
        migrations.CreateModel(
            name='SiteCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(verbose_name='Статус')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='checks', to='core.country', verbose_name='Страна')),
                ('monitored_site', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='checks', to='core.monitoredsite', verbose_name='Отслеживаемый сайт')),
            ],
            options={
                'verbose_name': 'Отслеживаемый сайт',
                'verbose_name_plural': 'Отслеживаемые сайты',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='ClientMonitoredSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_end', models.DateTimeField(verbose_name='Оплачен до')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата изменения')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='monitored_sites', to='core.client', verbose_name='Пользователь')),
                ('monitored_site', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='clients', to='core.monitoredsite', verbose_name='Сайт')),
            ],
            options={
                'verbose_name': 'Отслеживаемый пользователем сайт',
                'verbose_name_plural': 'Отслеживаемые пользователями сайты',
                'ordering': ['-created_at'],
                'unique_together': {('client', 'monitored_site')},
            },
        ),
    ]
